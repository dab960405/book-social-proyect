name: BSN Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'book-network/**'
      - 'pom.xml'
      - '.github/workflows/pipeline-backend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'book-network/**'

jobs:
  # ✅ TEST DEL BACKEND
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run Unit Tests
        working-directory: ./book-network
        run: ./mvnw clean test

  # 🚀 DEPLOY AUTOMÁTICO A KOYEB
  deploy:
    name: Deploy Backend to Koyeb
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get Service ID from Koyeb
        id: get-service
        run: |
          echo "🔍 Fetching services from Koyeb..."
          
          RESPONSE=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.KOYEB_TOKEN }}" \
            "https://app.koyeb.com/v1/services")
          
          echo "📄 API Response (first 500 chars):"
          echo "$RESPONSE" | head -c 500
          echo ""
          
          # Buscar el servicio por nombre
          SERVICE_ID=$(echo "$RESPONSE" | jq -r '.services[] | select(.name=="book-social-proyect") | .id')
          
          if [ -z "$SERVICE_ID" ] || [ "$SERVICE_ID" = "null" ]; then
            echo "❌ Service 'book-social-proyect' not found"
            echo "Available services:"
            echo "$RESPONSE" | jq -r '.services[].name'
            exit 1
          fi
          
          echo "✅ Found Service ID: $SERVICE_ID"
          echo "service_id=$SERVICE_ID" >> $GITHUB_OUTPUT

      - name: Trigger Koyeb Redeploy
        run: |
          echo "🚀 Triggering redeploy for service: ${{ steps.get-service.outputs.service_id }}"
          
          RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.KOYEB_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://app.koyeb.com/v1/services/${{ steps.get-service.outputs.service_id }}/redeploy")
          
          HTTP_STATUS=$(echo "$RESPONSE" | grep HTTP_STATUS | cut -d: -f2)
          BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS:/d')
          
          echo "📡 HTTP Status: $HTTP_STATUS"
          echo "📄 Response Body:"
          echo "$BODY" | jq '.' || echo "$BODY"
          
          if [ "$HTTP_STATUS" = "200" ] || [ "$HTTP_STATUS" = "201" ]; then
            echo "✅ Deployment triggered successfully!"
            echo "🌐 View deployment: https://app.koyeb.com/services/book-social-proyect"
          else
            echo "❌ Deployment failed with status: $HTTP_STATUS"
            exit 1
          fi

      - name: Deployment Summary
        if: success()
        run: |
          echo "### ✅ Deployment Successful! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** book-social-proyect" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Deployment triggered" >> $GITHUB_STEP_SUMMARY
          echo "**Dashboard:** https://app.koyeb.com/services/book-social-proyect" >> $GITHUB_STEP_SUMMARY
  
