name: BSN Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'book-network/**'
      - 'pom.xml'
      - '.github/workflows/pipeline-backend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'book-network/**'

jobs:
  # ‚úÖ TEST DEL BACKEND
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configurar Java 17
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      # 3Ô∏è‚É£ Cache de dependencias Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # 4Ô∏è‚É£ Ejecutar pruebas unitarias
      - name: Run Unit Tests
        working-directory: ./book-network
        run: ./mvnw clean test


  # üöÄ DEPLOY AUTOM√ÅTICO A KOYEB
  deploy:
    name: Deploy Backend to Koyeb
    runs-on: ubuntu-latest
    needs: test   # Solo se ejecuta si los tests pasan correctamente
    steps:
      # 1Ô∏è‚É£ Clonar el c√≥digo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Instalar jq (para procesar JSON de la API de GitHub)
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      # 3Ô∏è‚É£ Instalar Koyeb CLI (√∫ltima versi√≥n con soporte para .tar.gz)
      - name: Install Koyeb CLI (Latest)
        run: |
          set -e
          KOYEB_VERSION=$(curl -s https://api.github.com/repos/koyeb/koyeb-cli/releases/latest | jq -r .tag_name)
          echo "Latest version: $KOYEB_VERSION"

          # Detectar arquitectura
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            ARCH="amd64"
          elif [ "$ARCH" = "aarch64" ]; then
            ARCH="arm64"
          fi

          # Descargar el binario correcto (nuevo formato .tar.gz)
          curl -L "https://github.com/koyeb/koyeb-cli/releases/download/${KOYEB_VERSION}/koyeb_${KOYEB_VERSION#v}_linux_${ARCH}.tar.gz" -o koyeb.tar.gz

          # Extraer y mover a /usr/local/bin
          tar -xzf koyeb.tar.gz
          sudo mv koyeb /usr/local/bin/koyeb
          chmod +x /usr/local/bin/koyeb

          # Verificar instalaci√≥n
          koyeb --version

      # 4Ô∏è‚É£ Desplegar autom√°ticamente a Koyeb
      - name: Deploy to Koyeb
        run: |
          koyeb login --token $KOYEB_API_KEY

          # Verifica si el servicio ya existe en Koyeb
          if koyeb services list | grep -q "book-social-proyect"; then
            echo "üîÅ Actualizando servicio existente..."
            koyeb services update book-social-proyect \
              --git github.com/dab960405/book-social-proyect \
              --branch main \
              --dockerfile book-network/Dockerfile \
              --context .
          else
            echo "üöÄ Creando nuevo servicio..."
            koyeb services create book-social-proyect \
              --git github.com/dab960405/book-social-proyect \
              --branch main \
              --dockerfile book-network/Dockerfile \
              --context .
          fi
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}

